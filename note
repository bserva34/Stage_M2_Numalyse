SLV (super lecteur vidéo) : PC/MAC/Linux
!= VLC, Quicktime, Screen, lina
https://videovillage.com/screen/ -> 176€
https://iina.io/ -> os

interface ergonomique et intuitive inspirée de Screen 
-lecture de plusieurs vidéos en simultanement et synchroniquement
-zoom
-affichage d'image fixes, texte
-lecture de son
-système de calque/grille
-outil de segmentation
-interface d'annotation manuelle
-capture images fixe et capture sonore
-découpage et encodage de segment source vidéo en format commun
étude iconographique : 1. Étude descriptive des différentes représentations figurées d'un même sujet ; ensemble classé des images correspondantes.
-recherche iconographique en ligne


article 1 : https://ieeexplore.ieee.org/document/8547093

article 2 : méthode corrélation classique SAD/SSD
			méthode flot optique (gradients)
			modélisation flou du nvd des pixels (utilise histogramme quasi continue et théorie de possibilités)
				-QCH (Histogrammes quasi-continuous) utilisent une partition floue de l'espace paramétrique (améliore la robustesse face au bruit et au erreur de dicrétisation)
					Chaque cellule de l'histogramme est définie par une fonction d'appartenance triangulaire qui se chevauche avec ses voisines. 
				-classification floue (qui permet d'attenuer les variations de lumières) :
					classe "blanc" et classes "noir" : clair et sombres
				-L’estimation du mouvement repose sur un vote pondéré des pixels dans un histogramme flou multidimensionnel (Tx, Ty, Rotation), et le mouvement principal est déterminé en recherchant le mode de cet histogramme à l’aide de la théorie des probabilités imprécises et de la théorie des possibilités.
				-Avantages et inconvénient : 
					estimation du mouvement et mesure de confiance (seuil de pertinance de l'estimation fixé par les données)
					temps de calcul élevé
					taux de chevauchement entre 2 images minimum 75% pour une bonne estimation.
				-comparaison :
					méthode classique limité par la sensibilité au bruit
					La méthode QCH est plus robuste face aux variations d'illumination, aux objets parasites en mouvement et aux erreurs de quantification.


article 7 : téléchargé
	https://kinoai.inria.fr/ logiciel utilisé dans l'article 
		détection de personnages et calcul de cadrage automatique les plus pertinant 
		détection de personnage : utilisation de la librairie OpenPose.
		découpage : algo d'optimisation temporelle

		1h de captation = 10h de découpage
		version client-serveur avec visualisation en ligne pour éviter une limite de temps sur les données fournis/traité

		annotation avec timeline
			-mode table: 
				notation simplement importé et associé
				note en rouge quand l'action associé apparait 
				note cliquable pour visionner la scène associé
			-mode planche:
					choix des cadres en fonction des notations
					séquence découpé en fonction des notations
					plan large et plan résseré choisit par ingénieur en fonction de la note

		prise en main compliqué et temps de traitement trop élevé




Pour développer un logiciel de traitement vidéo et implémenter ces fonctionnalités, voici quelques techniques et technologies utiles :

Interface ergonomique et intuitive : Utilisation de frameworks comme Qt (C++) ou SwiftUI (macOS).
Lecture vidéo simultanée : Utilisation de FFmpeg ou de bibliothèques comme OpenCV pour la gestion des flux vidéo multiples.
Zoom et affichage d'images fixes : Manipulation de la vidéo avec OpenGL ou Vulkan.
Système de calque/grille : Création de couches superposées avec des graphics frameworks (e.g., Qt).
Segmentation et découpage vidéo : FFmpeg ou OpenCV pour la détection et le découpage de segments.
Annotation manuelle : Canvas API pour la superposition d'annotations.
Encodage de vidéo : Utilisation de FFmpeg pour le transcodage dans des formats communs.
Recherche iconographique : Implémentation d'algorithmes de vision par ordinateur avec TensorFlow ou OpenCV.
